[project]
name = "superagent"
version = "2.0.0"
description = "Production-ready CLI-based AI automation platform with GeminiCLI/Codex-grade UX"
authors = [{name = "SuperAgent Team"}]
requires-python = ">=3.10"
dependencies = [
    "typer>=0.12.0",
    "rich>=13.7.0",
    "pydantic>=2.6.0",
    "pydantic-settings>=2.2.0",
    "asyncio>=3.4.3",
    "aiohttp>=3.9.0",
    "litellm>=1.30.0",
    "openai>=1.12.0",
    "anthropic>=0.18.0",
    "chromadb>=0.4.22",
    "sentence-transformers>=2.5.0",
    "sqlalchemy>=2.0.27",
    "redis>=5.0.1",
    "cryptography>=42.0.0",
    "pyjwt>=2.8.0",
    "prometheus-client>=0.19.0",
    "python-dotenv>=1.0.1",
    "pyyaml>=6.0.1",
    "httpx>=0.27.0",
    "prompt-toolkit>=3.0.43",
    "opentelemetry-api>=1.22.0",
    "opentelemetry-sdk>=1.22.0",
    "opentelemetry-exporter-otlp>=1.22.0",
    "reportlab>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "black>=24.2.0",
    "ruff>=0.2.0",
    "mypy>=1.8.0",
]

[project.scripts]
superagent = "superagent.cli.app:cli_main"
sa = "superagent.cli.app:cli_main"

[build-system]
requires = ["setuptools>=68.0"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 100
target-version = ['py310']

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
